spring.application.name=corporate_crm

# ------------------
# --- JSON Web Token
# ------------------
jwt.secret=questa-e-la-tua-chiave-super-segreta-di-32-caratteri
# 15 minuti in millisecondi
jwt.expiration=900000
# 7 giorni in millisecondi
jwt.refreshExpiration=604800000


# ------------------
# --- SSL / HTTPS
# ------------------
# Usa formato PKCS
server.ssl.key-store-type=PKCS12

# Percorso per il keystore del certificato
server.ssl.key-store=classpath:keystore/keystore.p12

# Password usata per il certificato
server.ssl.key-store-password=la_tua_password_sicura

# Alias del certificato
server.ssl.key-alias=local-ssl

# Accetta solo richieste HTTPS
server.ssl.enabled=true

# Server
server.port=8334


# --------------------------------------
# --- Configurazione Database PostgreSQL
# --------------------------------------
spring.datasource.driver-class-name=org.postgresql.Driver

# Indirizzo del database
spring.datasource.url=jdbc:postgresql://localhost:5432/corporate_crm

# Nome utente database per l'applicazione
spring.datasource.username=corporate_crm

# Password utente database
spring.datasource.password=your_secure_password


# Indica a Hibernate di creare le tabelle automaticamente, prima di caricare i dati
spring.jpa.defer-datasource-initialization=true

# Aggiunge eventuali nuove colonne alle tabelle automaticamente
spring.jpa.hibernate.ddl-auto = update 

# Attiva l'utilizzo di script anche per database non embedded
spring.sql.init.mode=always

# Script dati per impostare i ruoli
spring.sql.init.data-locations=classpath:/db/data.sql